#pragma once
#include "main.h"


// Wlan
#define SSID "Your-ssid"
#define PASSWORD "YourPassword"
#define HOSTNAME "ESP8266-PV-LOGGER"

// Static IP config is in main.cpp
// You enable it here
//#define staticIP


// MQTT
#define MQTT
#ifdef MQTT
#define mqttBrokerIP "192.168.111.2"
#define mqttBrokerPort 1883
//#define MQTTUSER "" // Comment this line out if you use mqtt without authentication
//#define MQTTPASS "" // Comment this line out if you use mqtt without authentication

#define mqtt_base_topic "/home/pv/#"

#define readInterval 45 // in s
#define mqtt_power_topic "/home/all/pv/actualPower" // power
#define mqtt_eToday_topic "/home/all/pv/energyToday" // energy today
#define mqtt_temp_topic "/home/all/pv/inverterTemp" // intverter temperature

#define mqtt_dcu_topic "/home/all/pv/dc/u" // DC voltage
#define mqtt_dci_topic "/home/all/pv/dc/i" // DC current

#define mqtt_acu_topic "/home/all/pv/ac/u" // AC voltage
#define mqtt_aci_topic "/home/all/pv/ac/i" // AC current
#define mqtt_acf_topic "/home/all/pv/ac/f" // AC frequency

// Topic for sending the values from the ds18b20. Only used if you are using a ds18b20.
#define mqtt_ds18b20_topic "/home/all/pv/ds18b20Temp" 

#define mqttStatusIntveral 300 // in s
#define mqtt_info_ping_topic "/home/all/pv/status/ping"
#define mqtt_info_pong_topic "/home/all/pv/status/pong"
#define mqtt_status_rssi_topic "/home/all/pv/status/rssi"
#endif

// INFLUXDB
//#define influxDB
#define influxdbInterval 600 // in s
#ifdef influxDB
#define INFLUXDB_HOST "192.168.111.2"   //Enter IP of device running Influx Database
#define INFLUXDB_DATABASE "pv" //Database name
#define defaultTableName "pv" // Name of the table with power, voltage, ...

// Logged parameters
// Comment out line to disable logging for the parameter
#define INFLUXDB_POWER
// #define INFLUXDB_ENERGYTODAY
#define INFLUXDB_DC_U
#define INFLUXDB_DC_I
// #define INFLUXDB_AC_U
// #define INFLUXDB_AC_I
// #define INFLUXDB_AC_F
// #define INFLUXDB_TEMPERATURE
// #define INFLUXDB_RSSI

#define dailyEnergyInfluxDB // This option write the produced energy in another table every time the inverter turns off
#define deTableName "dailyEnergy"

#endif

// PVOUTPUT
//#define PVOUTPUT
#define PVOUTPUT_sendInterval 600 // in s 10min
#ifdef PVOUTPUT
#define PVOUTPUT_systemID "SYSTEM_ID"
#define PVOUTPUT_key "PVOUTPUT-KEY"
#endif
// Temperaturesource for PVoutput
// Options:
// 0: using the temperature from the inverter
// 1: using the temperature from a attached DS18B20 (works only if a ds18b20 is attached an configured in the logger.)
#define PVOUTPUT_temperatureSource 0


// DS18B20
#define DS18B20
#define DS18B20_PIN 0 // D3
#define DS18B20_READ_INTERVAL 60 // in s

//  NTP
#define NTP_SERVER_IP "pool.ntp.org"
#define TIMEZONE +1 // Central europe

// Status leds
#define LED_BLUE   13 // D7
#define LED_YELLOW 15 // D8

// RS485 - MODBUS CONFIG
// slaveID from inverter
#define slaveID_inverter 1
#define readDelay 2550 // delay between reading data

/*!
  We're using a MAX485-compatible RS485 Transceiver.
  Rx/Tx is hooked up to the hardware serial port at 'Serial'.
  The Data Enable and Receiver Enable pins are hooked up as follows:
*/
#define MAX485_DE 16 // D0

// RX
#define rs485_RX 14 // D5 

// TX
#define rs485_TX 12 // D6


// Other Modbus device
// At the moment holding register is only implented
//#define otherDevice
#define oSlaveID 11
#define oStartReg 0 // Start register
#define oNumReg 2 // Number of registers too read
#define oInterval 120 // readInterval 